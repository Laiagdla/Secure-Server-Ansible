- name: Apt update
  ansible.builtin.apt:
    name: apt
    update_cache: safe
    upgrade: true
    cache_valid_time: "86400" # One day

- name: Install sudo via apt
  ansible.builtin.apt:
    name: sudo

- name: Create group for ssh users
  ansible.builtin.group:
    name: sshusers

- name: Create group for su users
  ansible.builtin.group:
    name: suusers

- name: Create group for sudo users
  ansible.builtin.group:
    name: sudousers

- name: Ensure python3-passlib is installed
  ansible.builtin.apt:
    name: python3-passlib
    state: present

- name: Create new user with password, add to groups
  ansible.builtin.user:
    name: "{{ user_name }}"
    password: "{{ user_pw | password_hash('sha512') }}"
    groups: "sshusers, sudousers, suusers"
    shell: /bin/bash

- name: Limit sudo to sudousers groups
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    regexp: '^%sudousers'
    line: '%sudousers   ALL=(ALL:ALL) ALL'

- name: Limit who can use su
  register: sustd
  ansible.builtin.shell: |
    sudo dpkg-statoverride --update --add root suusers 4750 /bin/su
  changed_when: sustd.rc != 0 # <- Uses the return code to define when the task has changed.
  # failed_when:
  #   - sustd.rc != 0
  #   - '"exist" not in sustd.stderr' # this has to be changed: unsure how to skip the "already exist" error in other languages

- name: Passwordless sudo for new user
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    regexp: '^{{ user_name }}'
    line: '{{ user_name }} ALL=(ALL) NOPASSWD: ALL'
    state: present
    mode: '0440'
    create: true
    validate: 'visudo -cf %s'

- name: Add authorized keys for new user
  ansible.posix.authorized_key:
    user: "{{ user_name }}"
    key: "{{ lookup('file', sshpub_location) }}"
